service: 'fingermagic'

custom:
  # configure the following (see above for details)
  hostedZoneName: fingermagic.com
  domainName: fingermagic.com
  certificateARN: "arn:aws:acm:us-east-1:############:certificate/########-####-####-####-############"
  # bucket name is based on the domain, tweak this as appropriate
  bucketName: ${self:custom.domainName}
  s3Sync:
    - bucketName: ${self:custom.bucketName}
      localDir: ./build
  cloudfrontInvalidate:
    - distributionIdKey: CloudFrontId
      items:
        - "/*"
  scripts:
    hooks:
      'before:deploy:deploy': npm run build

plugins:
  - serverless-plugin-scripts
  - serverless-s3-sync
  - serverless-cloudfront-invalidate

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1

resources:
  Resources:
    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: !Join ["-", ["access-identity", !GetAtt S3Bucket.DomainName]]
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      DependsOn:
        - S3Bucket
      Properties:
        DistributionConfig:
          PriceClass: PriceClass_All
          ViewerCertificate:
            CloudFrontDefaultCertificate: true
          Enabled: true
          HttpVersion: http2
          DefaultRootObject: index.html
          Origins:
            - Id: static
              DomainName: !GetAtt S3Bucket.RegionalDomainName
              S3OriginConfig:
                OriginAccessIdentity: !Join ["", ["origin-access-identity/cloudfront/", !Ref CloudFrontOriginAccessIdentity]]
          DefaultCacheBehavior:
            TargetOriginId: static
            # 'Managed-CachingOptimized'
            # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            # 'Managed-CORS-S3Origin'
            # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
            ViewerProtocolPolicy: redirect-to-https
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action: "s3:GetObject"
              Resource: !Join ["", [!GetAtt S3Bucket.Arn, "/*"]]
              Principal:
                CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
  Outputs:
    CloudFrontId:
      Description: CloudFront Id
      Value: !Ref CloudFrontDistribution
      Export:
        Name: FingerMagic
